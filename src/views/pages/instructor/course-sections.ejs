<div class="container">
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/instructor/dashboard">Instructor Dashboard</a></li>
            <li class="breadcrumb-item active" aria-current="page">Course Sections</li>
        </ol>
    </nav>

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Course Sections</h1>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createCourseSectionModal">
            <i class="bi bi-plus-circle me-1"></i> Create New Course Section
        </button>
    </div>

    <!-- Course Sections List -->
    <div class="card">
        <div class="card-header">
            <h5 class="mb-0">My Course Sections</h5>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-striped table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Course</th>
                            <th>Section</th>
                            <th>Semester</th>
                            <th>Academic Year</th>
                            <th>Students</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (courseSections.length===0) { %>
                            <tr>
                                <td colspan="7" class="text-center py-4">
                                    <p class="text-muted mb-0">No course sections found.</p>
                                    <small>Create your first course section to get started.</small>
                                </td>
                            </tr>
                            <% } else { %>
                                <% courseSections.forEach(section=> { %>
                                    <tr>
                                        <td>
                                            <strong>
                                                <%= section.courseCode %>
                                            </strong><br>
                                            <small class="text-muted">
                                                <%= section.courseName %>
                                            </small>
                                        </td>
                                        <td>
                                            <%= section.sectionCode %>
                                        </td>
                                        <td>
                                            <%= section.semester %>
                                        </td>
                                        <td>
                                            <%= section.academicYear %>
                                        </td>
                                        <td>
                                            <span class="badge bg-info">
                                                <%= section.studentCount %> students
                                            </span>
                                        </td>
                                        <td>
                                            <% if (section.isActive) { %>
                                                <span class="badge bg-success">Active</span>
                                                <% } else { %>
                                                    <span class="badge bg-secondary">Inactive</span>
                                                    <% } %>
                                        </td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <a href="/instructor/course-management/course-sections/<%= section.id %>/students"
                                                    class="btn btn-sm btn-outline-primary" title="View Students">
                                                    <i class="bi bi-people"></i>
                                                </a>
                                                <button class="btn btn-sm btn-outline-secondary toggle-section"
                                                    data-id="<%= section.id %>" data-active="<%= section.isActive %>"
                                                    title="<%= section.isActive ? 'Deactivate' : 'Activate' %>">
                                                    <i class="bi bi-<%= section.isActive ? 'pause' : 'play' %>"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                    <% }); %>
                                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Export Options -->
    <div class="card mt-4">
        <div class="card-header">
            <h5 class="mb-0">Export Semester Data</h5>
        </div>
        <div class="card-body">
            <form id="exportForm" action="/instructor/course-management/export/semester" method="GET">
                <div class="row g-3">
                    <div class="col-md-3">
                        <label for="academicYear" class="form-label">Academic Year</label>
                        <select name="academicYear" id="academicYear" class="form-select">
                            <option value="all">All Years</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="semester" class="form-label">Semester</label>
                        <select name="semester" id="semester" class="form-select">
                            <option value="all">All Semesters</option>
                            <option value="Fall">Fall</option>
                            <option value="Spring">Spring</option>
                            <option value="Summer">Summer</option>
                            <option value="Winter">Winter</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="courseSection" class="form-label">Course Section</label>
                        <select name="courseSection" id="courseSection" class="form-select">
                            <option value="all">All Sections</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="topicId" class="form-label">Topic (Optional)</label>
                        <select name="topicId" id="topicId" class="form-select">
                            <option value="all">All Topics</option>
                        </select>
                    </div>
                </div>
                <div class="mt-3">
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-download me-1"></i> Export CSV
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Create Course Section Modal -->
<div class="modal fade" id="createCourseSectionModal" tabindex="-1" aria-labelledby="createCourseSectionModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createCourseSectionModalLabel">Create New Course Section</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="createCourseSectionForm">
                <div class="modal-body">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label for="courseCode" class="form-label">Course Code</label>
                            <input type="text" class="form-control" id="courseCode" name="courseCode"
                                placeholder="e.g., CS101" required>
                        </div>
                        <div class="col-md-6">
                            <label for="sectionCode" class="form-label">Section Code</label>
                            <input type="text" class="form-control" id="sectionCode" name="sectionCode"
                                placeholder="e.g., A, B, 01" required>
                        </div>
                        <div class="col-12">
                            <label for="courseName" class="form-label">Course Name</label>
                            <input type="text" class="form-control" id="courseName" name="courseName"
                                placeholder="e.g., Introduction to Databases" required>
                        </div>
                        <div class="col-md-6">
                            <label for="academicYear" class="form-label">Academic Year</label>
                            <select class="form-select" id="academicYear" name="academicYear" required>
                                <option value="">Select Academic Year</option>
                                <option value="2024-2025">2024-2025</option>
                                <option value="2025-2026">2025-2026</option>
                                <option value="2026-2027">2026-2027</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="semester" class="form-label">Semester</label>
                            <select class="form-select" id="semester" name="semester" required>
                                <option value="">Select Semester</option>
                                <option value="Fall">Fall</option>
                                <option value="Spring">Spring</option>
                                <option value="Summer">Summer</option>
                                <option value="Winter">Winter</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create Course Section</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Load available semesters and course sections for export filters
        loadExportFilters();

        // Create course section form handler
        document.getElementById('createCourseSectionForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const formData = new FormData(this);
            const data = Object.fromEntries(formData.entries());

            try {
                const response = await fetch('/instructor/course-management/course-sections', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });

                const result = await response.json();

                if (result.success) {
                    // Close modal and reload page
                    bootstrap.Modal.getInstance(document.getElementById('createCourseSectionModal')).hide();
                    window.location.reload();
                } else {
                    alert(result.message || 'Failed to create course section');
                }
            } catch (error) {
                console.error('Error creating course section:', error);
                alert('An error occurred while creating the course section');
            }
        });

        // Toggle course section status
        document.querySelectorAll('.toggle-section').forEach(button => {
            button.addEventListener('click', async function () {
                const sectionId = this.getAttribute('data-id');
                const isActive = this.getAttribute('data-active') === 'true';

                try {
                    const response = await fetch(`/instructor/course-management/course-sections/${sectionId}/toggle`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    });

                    const result = await response.json();

                    if (result.success) {
                        // Update button appearance
                        this.setAttribute('data-active', result.isActive);
                        const icon = this.querySelector('i');
                        if (result.isActive) {
                            icon.className = 'bi bi-pause';
                            this.title = 'Deactivate';
                        } else {
                            icon.className = 'bi bi-play';
                            this.title = 'Activate';
                        }

                        // Update status badge in the same row
                        const statusCell = this.closest('tr').querySelector('td:nth-child(6)');
                        const badge = statusCell.querySelector('.badge');
                        if (result.isActive) {
                            badge.className = 'badge bg-success';
                            badge.textContent = 'Active';
                        } else {
                            badge.className = 'badge bg-secondary';
                            badge.textContent = 'Inactive';
                        }
                    } else {
                        alert(result.message || 'Failed to toggle course section status');
                    }
                } catch (error) {
                    console.error('Error toggling course section:', error);
                    alert('An error occurred while toggling the course section status');
                }
            });
        });

        async function loadExportFilters() {
            try {
                const response = await fetch('/instructor/course-management/semesters');
                const data = await response.json();

                if (data.success) {
                    // Populate academic year dropdown
                    const academicYearSelect = document.getElementById('academicYear');
                    data.semesters.forEach(semester => {
                        const option = document.createElement('option');
                        option.value = semester.academicYear;
                        option.textContent = semester.academicYear;
                        academicYearSelect.appendChild(option);
                    });

                    // Populate course section dropdown
                    const courseSectionSelect = document.getElementById('courseSection');
                    data.courseSections.forEach(section => {
                        const option = document.createElement('option');
                        option.value = section.identifier;
                        option.textContent = section.displayName;
                        courseSectionSelect.appendChild(option);
                    });
                }
            } catch (error) {
                console.error('Error loading export filters:', error);
            }
        }
    });
</script>